// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ctre/Phoenix.h"

#include "DrivingSystem.h"
#include "../RobotMap.h"
#include "../Robot.h"
#include <iostream>
#include "time.h"
#include "../Commands/AutonomousCommand.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

DrivingSystem::DrivingSystem() :
		frc::Subsystem("DrivingSystem") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	talonSRX1 = RobotMap::drivingSystemTalonSRX1;
	victorSPX1 = RobotMap::drivingSystemVictorSPX1;
	speedControllerGroup1 = RobotMap::drivingSystemSpeedControllerGroup1;

	talonSRX2 = RobotMap::drivingSystemTalonSRX2;
	victorSPX3 = RobotMap::drivingSystemVictorSPX3;

	speedControllerGroup2 = RobotMap::drivingSystemSpeedControllerGroup2;
	robotDrive21 = RobotMap::drivingSystemRobotDrive21;

	Gyro1 = RobotMap::Gyro1;

	curAnge = Gyro1->GetAngle();

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void DrivingSystem::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	// SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

double DrivingSystem::suoqu(double c){
	if(c < 0.14 && c > -0.14)
	{
		return 0.0;
	}
	else return c;
}

void DrivingSystem::Periodic() {
	// Put code here to be run every loop、
	//Xbox = Joystick
	//用ArcadeDrive控制， 直接获取控制器的XY轴
	frc::SmartDashboard::PutNumber("Angle" ,DrivingSystem::Gyro1->GetAngle() - curAnge);
	frc::XboxController Xbox1(0);
	DrivingSystem::robotDrive21->ArcadeDrive(
			suoqu(-1 * Xbox1.GetY(frc::GenericHID::JoystickHand::kLeftHand)),
			suoqu(Xbox1.GetX(frc::GenericHID::JoystickHand::kLeftHand)));

//	if (Xbox1.GetY(frc::GenericHID::JoystickHand::kLeftHand) >=0.5 || Xbox1.GetY(frc::GenericHID::JoystickHand::kLeftHand)<=0.5)
//	{
//		DrivingSystem::robotDrive21->RobotDrive(-0.1, 0.1);
//	}
}
