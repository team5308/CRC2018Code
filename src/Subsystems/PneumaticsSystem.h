// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef PNEUMATICSSYSTEM_H
#define PNEUMATICSSYSTEM_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "../OI.h"

const bool IsOut = true;
const bool IsNotOut = false;

const bool out = true;
const bool in = false;

/**
 *
 *
 * @author ExampleAuthor
 */
class PneumaticsSystem: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<frc::Compressor> compressor;
	std::shared_ptr<frc::Solenoid> solenoid1;
	std::shared_ptr<frc::DoubleSolenoid> solenoid2;
	std::shared_ptr<frc::Solenoid> solenoid3;
	std::shared_ptr<frc::Solenoid> solenoid4;

	// When Rico is true, it stands that he is erecting.
	bool Rico1=IsNotOut;
	bool Rico2=IsNotOut;
	bool Rico3=IsNotOut;
	bool Rico4=IsOut;

	//use to change situation of Solenoid

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	PneumaticsSystem();
	void InitDefaultCommand() override;
	void Periodic() override;
	void compOn();
	void compOff();
	bool changeSituation(int,bool);
	void Solenoid1();
	void Solenoid2();
	void Solenoid3();
	void Solenoid4();
	void InitSolenoid(int);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
};

#endif
